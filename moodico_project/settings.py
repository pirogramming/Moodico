"""
Django settings for moodico_project project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from decouple import config, Csv
import sys

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
if os.getenv('GITHUB_ACTIONS') == 'true':  # running in GitHub Actions
    SECRET_KEY = config('DJANGO_SECRET_KEY', default='insecure-ci-only-secret')
else:  # production or local dev
    SECRET_KEY = config('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DJANGO_DEBUG', cast=bool, default=False)


ALLOWED_HOSTS = config('DJANGO_ALLOWED_HOSTS', default='localhost,127.0.0.1', cast=Csv())
CSRF_TRUSTED_ORIGINS = config(
    'DJANGO_CSRF_TRUSTED_ORIGINS',
    default='http://localhost:8000,http://127.0.0.1:8000',
    cast=Csv()
)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'moodico.main', # 메인 앱
    'moodico.upload', # 이미지 업로드 앱
    'moodico.recommendation', # 추천 시스템 앱
    'moodico.products', # 제품 관련 앱
    'moodico.moodtest', # 무드 테스트 앱
    'moodico.users', # 유저 앱
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'moodico_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'moodico.users.context_processors.kakao_user',
            ],
        },
    },
]

WSGI_APPLICATION = 'moodico_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
if config('DATABASE_URL', default=''):
    import dj_database_url
    DATABASES = {
        'default': dj_database_url.parse(config('DATABASE_URL'), conn_max_age=600)
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# 배포 시 사용
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'  # NCP에 저장될 예정 -> 사용되지 않음
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') # NCP에 저장될 예정 -> 사용되지 않음


# # NCP Object Storage setting(S3)
# # dummy key is for github actions
# # AWS_ACCESS_KEY_ID = config("AWS_ACCESS_KEY_ID", default="dummy-key")
# # AWS_SECRET_ACCESS_KEY = config("AWS_SECRET_ACCESS_KEY", default="dummy-key")
# # AWS_STORAGE_BUCKET_NAME = config("AWS_STORAGE_BUCKET_NAME",default="dummy-key")
# AWS_ACCESS_KEY_ID = config("AWS_ACCESS_KEY_ID")
# AWS_SECRET_ACCESS_KEY = config("AWS_SECRET_ACCESS_KEY")
# AWS_STORAGE_BUCKET_NAME = config("AWS_STORAGE_BUCKET_NAME")

# AWS_S3_REGION_NAME = "kr-standard"
# AWS_S3_ENDPOINT_URL = "https://kr.object.ncloudstorage.com"
# AWS_S3_SIGNATURE_VERSION = "s3v4"
# AWS_S3_ADDRESSING_STYLE = "virtual"
# AWS_DEFAULT_ACL = None
# AWS_QUERYSTRING_AUTH = False

# INSTALLED_APPS += ["storages"]

# STORAGES = {
#     "default": {
#         "BACKEND": "storages.backends.s3.S3Storage",
#         "OPTIONS": {
#             "bucket_name": AWS_STORAGE_BUCKET_NAME,
#             "region_name": AWS_S3_REGION_NAME,
#             "endpoint_url": AWS_S3_ENDPOINT_URL,
#             "signature_version": AWS_S3_SIGNATURE_VERSION,
#             "addressing_style": AWS_S3_ADDRESSING_STYLE,
#         },
#     },
#     "staticfiles": {
#         "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
#     },
# }

# 카카오 로그인 설정
KAKAO_AUTH_HOST = "https://kauth.kakao.com"
KAKAO_API_HOST = "https://kapi.kakao.com"
IS_TEST = 'test' in sys.argv
KAKAO_REDIRECT_URI = config(
    "KAKAO_REDIRECT_URI",
    default="http://localhost:8000/users/kakao/callback/"
)
KAKAO_CLIENT_ID = config(
    "KAKAO_CLIENT_ID",
    default="dummy" if IS_TEST else None  # None => raise if missing
)
KAKAO_CLIENT_SECRET = config(
    "KAKAO_CLIENT_SECRET",
    default="dummy" if IS_TEST else None
)

# 로그인 로그아웃 후 리다이렉트 URL 설정
LOGIN_REDIRECT_URL = "/"
LOGOUT_REDIRECT_URL = "/login/"